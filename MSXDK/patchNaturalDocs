diff -urN NaturalDocs/Modules/NaturalDocs/Builder/HTMLBase.pm NaturalDocsMSXDK/Modules/NaturalDocs/Builder/HTMLBase.pm
--- NaturalDocs/Modules/NaturalDocs/Builder/HTMLBase.pm	Thu Jan 22 20:35:00 2004
+++ NaturalDocsMSXDK/Modules/NaturalDocs/Builder/HTMLBase.pm	Fri Jan 30 20:33:48 2004
@@ -2018,6 +2018,12 @@
             # Paragraphs
             $text =~ s/<p>/<p class=CParagraph>/g;
 
+            # Parameter reference open
+            $text =~ s/<param>/<font class=CDLEntry>/g;
+
+            # Parameter reference close
+            $text =~ s/<\/param>/<\/font>/g;
+
             # Bulleted lists
             $text =~ s/<ul>/<ul class=CBulletList>/g;
 
diff -urN NaturalDocs/Modules/NaturalDocs/Parser.pm NaturalDocsMSXDK/Modules/NaturalDocs/Parser.pm
--- NaturalDocs/Modules/NaturalDocs/Parser.pm	Thu Jan 22 22:45:00 2004
+++ NaturalDocsMSXDK/Modules/NaturalDocs/Parser.pm	Fri Jan 30 20:35:32 2004
@@ -820,7 +820,7 @@
         {
         # Extract the first sentence from the leading paragraph, if any.  We'll tolerate a single header beforehand, but nothing else.
 
-        if ($body =~ /^(?:<h>[^<]*<\/h>)?<p>(.*?)(<\/p>|[\.\!\?](?:[\)\}\'\ ]|&quot;|&gt;))/x)
+        if ($body =~ /^(?:<h>[^<]*<\/h>)?<p>(.*?)(<\/p>|[\.\!\?](?:[\)\}\'\ ]|&gt;))/x)
             {
             $summary = $1;
             if ($2 ne '</p>')
@@ -983,7 +983,7 @@
                 }
 
             # If the line looks like a description list entry...
-            elsif ($commentLines->[$index] =~ /^(.+?) +- +([^ ].*)$/)
+            elsif ($commentLines->[$index] =~ /^(.+?) +-( +([^ ].*)|())$/)
                 {
                 my $entry = $1;
                 my $description = $2;
@@ -1075,6 +1075,7 @@
                 if (defined $textBlock)
                     {  $textBlock .= ' ';  };
 
+                $commentLines->[$index] =~ s/:@/:/;
                 $textBlock .= $commentLines->[$index];
 
                 $prevLineBlank = undef;
@@ -1178,7 +1179,7 @@
 
     # Split the text from the potential tags.
 
-    my @tempTextBlocks = split(/([\*_<>])/, $text);
+    my @tempTextBlocks = split(/([\*_#<>])/, $text);
 
     # Since the symbols are considered dividers, empty strings could appear between two in a row or at the beginning/end of the
     # array.  This could seriously screw up TagType(), so we need to get rid of them.
@@ -1252,6 +1253,27 @@
                 };
             }
 
+        elsif ($textBlocks[$index] eq '#')
+            {
+            my $tagType = $self->TagType(\@textBlocks, $index);
+            
+            if ($tagType == POSSIBLE_OPENING_TAG && $self->ClosingTag(\@textBlocks, $index, undef) != -1)
+                {
+                # ClosingTag() makes sure tags aren't opened multiple times in a row.
+                $bold = 1;
+                $output .= '<param>';
+                }
+            elsif ($bold && $tagType == POSSIBLE_CLOSING_TAG)
+                {
+                $bold = undef;
+                $output .= '</param>';
+                }
+            else
+                {
+                $output .= '#';
+                };
+            }
+
         elsif ($textBlocks[$index] eq '_')
             {
             my $tagType = $self->TagType(\@textBlocks, $index);
@@ -1379,7 +1401,7 @@
 
     # Possible opening tags
 
-    if ( ( $textBlocks->[$index] =~ /^[\*_<]$/ ) &&
+    if ( ( $textBlocks->[$index] =~ /^[\*_#<]$/ ) &&
 
         # Before it must be whitespace, the beginning of the text, or ({["'-/.
         ( $index == 0 || $textBlocks->[$index-1] =~ /[\ \t\n\(\{\[\"\'\-\/]$/ )&&
@@ -1397,7 +1419,7 @@
 
     # Possible closing tags
 
-    elsif ( ( $textBlocks->[$index] =~ /^[\*_>]$/) &&
+    elsif ( ( $textBlocks->[$index] =~ /^[\*_#>]$/) &&
 
             # After it must be whitespace, the end of the text, or )}].,!?"';:-/.
             ( $index + 1 == scalar @$textBlocks || $textBlocks->[$index+1] =~ /^[ \t\n\)\]\}\.\,\!\?\"\'\;\:\-\/]/ ||
@@ -1450,7 +1472,7 @@
     my $hasWhitespace;
     my $closingTag;
 
-    if ($textBlocks->[$index] eq '*' || $textBlocks->[$index] eq '_')
+    if ($textBlocks->[$index] eq '*' || $textBlocks->[$index] eq '_' || $textBlocks->[$index] eq '#')
         {  $closingTag = $textBlocks->[$index];  }
     elsif ($textBlocks->[$index] eq '<')
         {  $closingTag = '>';  }
 
diff -urN NaturalDocs/Modules/NaturalDocs/Topics.pm NaturalDocsMSXDK/Modules/NaturalDocs/Topics.pm
--- NaturalDocs/Modules/NaturalDocs/Topics.pm	Tue Jan 20 02:16:00 2004
+++ NaturalDocsMSXDK/Modules/NaturalDocs/Topics.pm	Fri Jan 30 20:33:37 2004
@@ -22,10 +22,10 @@
 @ISA = qw(Exporter);
 
 @EXPORT = ('TOPIC_CLASS', 'TOPIC_SECTION', 'TOPIC_FILE', 'TOPIC_GROUP', 'TOPIC_FUNCTION', 'TOPIC_VARIABLE',
-                   'TOPIC_GENERIC', 'TOPIC_TYPE', 'TOPIC_CONSTANT',
+                   'TOPIC_GENERIC', 'TOPIC_TYPE', 'TOPIC_CONSTANT', 'TOPIC_MACRO',
 
                    'TOPIC_CLASS_LIST', 'TOPIC_FILE_LIST', 'TOPIC_FUNCTION_LIST', 'TOPIC_VARIABLE_LIST',
-                   'TOPIC_GENERIC_LIST', 'TOPIC_TYPE_LIST', 'TOPIC_CONSTANT_LIST');
+                   'TOPIC_GENERIC_LIST', 'TOPIC_TYPE_LIST', 'TOPIC_CONSTANT_LIST', 'TOPIC_MACRO_LIST');
 
 
 
@@ -55,6 +55,7 @@
 #
 #       TOPIC_CONSTANT - A constant.  Same as generic, but distinguished for indexing.
 #       TOPIC_TYPE          - A type.  Same as generic, but distinguished for indexing.
+#       TOPIC_MACRO   - A macro.
 #
 #       TOPIC_CLASS_LIST        - A list of classes.  Will not have scope.
 #       TOPIC_FILE_LIST            - A list of files.
@@ -64,6 +65,7 @@
 #
 #       TOPIC_CONSTANT_LIST - A list of constants.
 #       TOPIC_TYPE_LIST - A list of types.
+#       TOPIC_MACRO_LIST    - A list of macros.
 #
 #   Dependency:
 #
@@ -78,6 +80,7 @@
 use constant TOPIC_GENERIC => 7;
 use constant TOPIC_TYPE => 8;
 use constant TOPIC_CONSTANT => 9;
+use constant TOPIC_MACRO => 10;
 
 use constant TOPIC_LIST_BASE => 100;  # To accomodate for future expansion without changing the actual values.
 
@@ -88,6 +91,7 @@
 use constant TOPIC_GENERIC_LIST => (TOPIC_GENERIC + TOPIC_LIST_BASE);
 use constant TOPIC_TYPE_LIST => (TOPIC_TYPE + TOPIC_LIST_BASE);
 use constant TOPIC_CONSTANT_LIST => (TOPIC_CONSTANT + TOPIC_LIST_BASE);
+use constant TOPIC_MACRO_LIST => (TOPIC_MACRO + TOPIC_LIST_BASE);
 
 
 ###############################################################################
@@ -98,7 +102,7 @@
 #
 #   An array of the topic names.  Use the <Topic Types> as an index into it, except for list types.
 #
-my @names = ( undef, 'Class', 'Section', 'File', 'Group', 'Function', 'Variable', 'Generic', 'Type', 'Constant' );
+my @names = ( undef, 'Class', 'Section', 'File', 'Group', 'Function', 'Variable', 'Generic', 'Type', 'Constant', 'Macro' );
 # The string order must match the constant values.
 
 #
@@ -106,7 +110,7 @@
 #
 #   An array of the topic names, but plural.  Use the <Topic Types> as an index into it, except for list types.
 #
-my @pluralNames = ( undef, 'Classes', 'Sections', 'Files', 'Groups', 'Functions', 'Variables', 'Generics', 'Types', 'Constants' );
+my @pluralNames = ( undef, 'Classes', 'Sections', 'Files', 'Groups', 'Functions', 'Variables', 'Generics', 'Types', 'Constants', 'Macros' );
 # The string order must match the constant values.  "Generics" is wierd, I know.
 
 #
@@ -245,7 +249,6 @@
                             'definition'   => TOPIC_GENERIC,
                             'define'       => TOPIC_GENERIC,
                             'def'           => TOPIC_GENERIC,
-                            'macro'      => TOPIC_GENERIC,
                             'format'      => TOPIC_GENERIC,
 
                             'list'                => TOPIC_GENERIC_LIST,
@@ -257,7 +260,6 @@
                             'definitions'   => TOPIC_GENERIC_LIST,
                             'defines'       => TOPIC_GENERIC_LIST,
                             'defs'           => TOPIC_GENERIC_LIST,
-                            'macros'      => TOPIC_GENERIC_LIST,
                             'formats'      => TOPIC_GENERIC_LIST,
 
                             'constant'   => TOPIC_CONSTANT,
@@ -272,7 +274,10 @@
                             'typedef'    => TOPIC_TYPE,
 
                             'types'         => TOPIC_TYPE_LIST,
-                            'typedefs'    => TOPIC_TYPE_LIST
+                            'typedefs'    => TOPIC_TYPE_LIST,
+
+                            'macro'      => TOPIC_MACRO,
+                            'macros'      => TOPIC_MACRO_LIST
 
              );
 
@@ -286,7 +291,8 @@
                              TOPIC_FILE() => 1,
                              TOPIC_VARIABLE() => 1,
                              TOPIC_TYPE() => 1,
-                             TOPIC_CONSTANT() => 1 );
+                             TOPIC_CONSTANT() => 1,
+                             TOPIC_MACRO() => 1 );
 
 
 
diff -urN NaturalDocs/patchedForMSXDK NaturalDocsMSXDK/patchedForMSXDK
--- NaturalDocs/patchedForMSXDK	Thu Jan  1 01:00:00 1970
+++ NaturalDocsMSXDK/patchedForMSXDK	Mon Feb  2 04:23:08 2004
@@ -0,0 +1 @@
+Just a tag file to let the documentation build script check whether this Natural Docs package has already been patched or not.
\ No newline at end of file
